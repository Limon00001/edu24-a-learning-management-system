/**
 * Author: Monayem Hossain Limon
 * GitHub: https://github.com/Limon00001
 * Date: 22 May, 2025
 * @copyright 2025 monayem_hossain_limon
 */

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id      String   @id @default(auto()) @map("_id") @db.ObjectId
  userName    String
  userEmail   String   @unique
  password String
  role String @default("user")
}

model Lecture {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  videoUrl    String
  public_id   String
  freePreview Boolean
  course      Course   @relation(fields: [courseId], references: [id])
  courseId    String   @db.ObjectId
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Student {
  id                String   @id @default(auto()) @map("_id") @db.ObjectId
  studentId         String
  studentName       String
  studentEmail      String
  courseId          String   @db.ObjectId
  courseTitle       String
  coursePricing     Int
  courseImage       String
  courseDescription String
  courseInstructor  String
  courseInstructorId String
  courseLevel       String
  courseLanguage    String
  paymentStatus     String
  paymentId         String   @unique
  enrolledAt        DateTime @default(now())
  course            Course   @relation(fields: [courseId], references: [id])

  @@unique([studentId, courseId], name: "uniqueEnrollment")
}

model Course {
  id              String   @id @default(auto()) @map("_id") @db.ObjectId
  instructorId    String   @db.ObjectId
  instructorName  String
  date           DateTime  @default(now())   
  title          String
  category       String
  level          String
  primaryLanguage String
  subtitle       String
  description    String
  image          String
  image_public_id String?
  welcomeMessage String?
  pricing        Float
  objectives     String
  students       Student[]
  curriculum     Lecture[]
  isPublished Boolean
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  @@index([category])
  @@index([instructorId])
}